module adder (
    input a[16],
    input b[16],
    input alufnIn[2],
    output out[16],
    output z,
    output v,
    output n
  ) {
  sig outread[16];
  
  always {
    // ADD
    if(alufnIn == 2b00){
        out = a + b;
        outread = a + b;
    }
      
    // SUB
    else if(alufnIn == 2b01) {
        out = a - b;
        outread = a - b;
    }
      
    // MUL
    else if(alufnIn == 2b10){
        out = a*b;
        outread = a*b;
    }
      
    // DIV (note we can only test for the floor of division)
    else if(alufnIn == 2b11){
        out = a/b;
        outread = a/b;
    }
    else{
        out = 0;
        outread = 0;
    }
    
    // z,v,n for compare module input
    n = outread[15];
    v = (a[15] & b[15] & (~outread[15])) | ((~a[15]) & (~b[15]) & outread[15]);
    z = ~| outread;
  }
}
